{"version":3,"sources":["locations.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,KAAK,QAAQ,WAAR,EAAqB,EAArB;;AAET,OAAO,OAAP,GAAiB;AACb,qBAAiB,CAAC,GAAD,EAAM,GAAN,KAAa;AAC1B,WAAG,SAAH,CAAa,MAAb,CAAoB,GAApB,EACK,IADL,CACU,QAAQ;AACV,gBAAI,IAAJ,CAAS;AACL,yBAAS,IAAT;AACA,sBAAM,IAAN;aAFJ,EADU;SAAR,CADV,CAOK,KAPL,CAOW,SAAS;AACZ,gBAAI,IAAJ,CAAS;AACL,yBAAS,KAAT;AACA,uBAAO,MAAM,OAAN,IAAiB,KAAjB;aAFX,EADY;SAAT,CAPX,CAD0B;KAAb;;AAgBjB,6BAAyB,CAAC,GAAD,EAAM,GAAN,KAAc;AACnC,YAAI,SAAS,GAAG,SAAH,CAAa,cAAb,EAAT,CAD+B;AAEnC,gBAAQ,MAAR,EAAgB,GAAhB,EAFmC;KAAd;;AAKzB,sBAAkB,CAAC,GAAD,EAAM,GAAN,KAAc;AAC5B,YAAI,SAAS,GAAG,SAAH,CAAa,OAAb,EAAT,CADwB;AAE5B,gBAAQ,MAAR,EAAgB,GAAhB,EAF4B;KAAd;;AAKlB,wBAAoB,CAAC,GAAD,EAAM,GAAN,KAAc;AAC9B,YAAI,SAAS,GAAG,SAAH,CAAa,SAAb,EAAT,CAD0B;AAE9B,gBAAQ,MAAR,EAAgB,GAAhB,EAF8B;KAAd;;AAKpB,wBAAoB,CAAC,GAAD,EAAM,GAAN,KAAc;AAC9B,YAAI,SAAS,GAAG,SAAH,CAAa,SAAb,EAAT,CAD0B;AAE9B,gBAAQ,MAAR,EAAgB,GAAhB,EAF8B;KAAd;CAhCxB;;AAuCA,SAAS,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,EAA8B;AAC1B,WACK,IADL,CACU,QAAQ;AACV,YAAI,IAAJ,CAAS;AACL,qBAAS,IAAT;AACA,kBAAM,IAAN;SAFJ,EADU;KAAR,CADV,CAOK,KAPL,CAOW,SAAS;AACZ,YAAI,IAAJ,CAAS;AACL,qBAAS,KAAT;AACA,mBAAO,MAAM,OAAN,IAAiB,KAAjB;SAFX,EADY;KAAT,CAPX,CAD0B;CAA9B","file":"locations-compiled.js","sourcesContent":["\"use strict\";\r\nlet db = require('../models').db;\r\n\r\nmodule.exports = {\r\n    locationsCreate: (req, res)=> {\r\n        db.locations.create(req)\r\n            .then(data => {\r\n                res.json({\r\n                    success: true,\r\n                    data: data\r\n                })\r\n            })\r\n            .catch(error => {\r\n                res.json({\r\n                    success: false,\r\n                    error: error.message || error\r\n                })\r\n            })\r\n    },\r\n\r\n    locationsListByDistance: (req, res) => {\r\n        let action = db.locations.listByDistance();\r\n        respond(action, res);\r\n    },\r\n\r\n    locationsReadOne: (req, res) => {\r\n        let action = db.locations.readOne();\r\n        respond(action, res);\r\n    },\r\n\r\n    locationsUpdateOne: (req, res) => {\r\n        let action = db.locations.updateOne();\r\n        respond(action, res);\r\n    },\r\n\r\n    locationsDeleteOne: (req, res) => {\r\n        let action = db.locations.deleteOne();\r\n        respond(action, res);\r\n    }\r\n};\r\n\r\n\r\nfunction respond(action, res) {\r\n    action\r\n        .then(data => {\r\n            res.json({\r\n                success: true,\r\n                data: data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            res.json({\r\n                success: false,\r\n                error: error.message || error\r\n            });\r\n        });\r\n}"]}